package com.example.labprog.crud;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping(path="/users") // This means URL's start with /users (after Application path)
public class MainController {

    @Autowired // This means to get the bean called userRepository Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    // C - CREATE - POST
    @PostMapping(path="/create")
    public ResponseEntity<String> addNewUser (@RequestParam String name, @RequestParam String email) {

        User n = new User();
        n.setFirstName(name);
        n.setEmail(email);
        userRepository.save(n);
        
        return ResponseEntity.ok("Sucess");
    }

    // R - READ - GET
    @GetMapping(path="/all")
    public Iterable<User> getAllUsers() {
        return userRepository.findAll();
    }
    
    @GetMapping(path="/search/{username}")
    public Iterable<User> getUserByUsername(@PathVariable("username") String username) {        
        return userRepository.findByUsername(username);
    }

    // U - UPDATE - PUT



    // D - DELETE - DELETE
    

}